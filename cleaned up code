import PyPDF2
import tabula as tb
#Importing the os library
import os

# Inbuilt function to remove files

import datetime
from datetime import date

today = date.today()
#print(today)
#prints 2022-11-26

try:
    filename = "kateimmrecord"
    file = filename + ".pdf"
    table = tb.read_pdf(file, pages='all')
    file2 = filename + ".csv"
    csv_table = tb.convert_into(file, file2, pages="all")
except:
    print("made already")
    
def numOfDays(date1, date2):
    return (date2 - date1).days

def age(filename):
    file = filename + ".pdf"

    pdfFileObject = open(file, 'rb')

    pdfReader = PyPDF2.PdfFileReader(pdfFileObject)

    pageObject = pdfReader.getPage(0)

    text = pageObject.extractText()

    month1 = []
    day1 = []
    year1 = []

    for line in text.splitlines()[4:5]:
        field = line.split("/")
        month1.append(field[0])
        day1.append(field[1])
        year1.append(field[2])

    month = []

    for i in month1:
        for x in i:
            if x in ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]:
                month.append(x)

    day = []

    for i in day1:
        for x in i:
            if x in ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]:
                day.append(x)
    year = []
    for i in year1:
        for x in i:
            if x in ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12"]:
                year.append(x)

    year = year[0:4]
    monthstr = ""
    daystr = ""
    yearstr = ""
    for i in month:
        monthstr = monthstr + i
    for i in day:
        daystr = daystr + i
    for i in year:
        yearstr = yearstr + i

    intmonth = int(monthstr)
    intday = int(daystr)
    intyear = int(yearstr)

    date1 = date(intyear, intmonth, intday)
    date2 = today
    day = numOfDays(date1, date2)

    user_age = int(day / 366)
    return user_age


def appropriate_age(file):
    user_age = age(file)
    if user_age >= 19:
        return True
    else:
        print("You need to be 19 and up to use this code: ")
        print("Come back in", 19 - user_age, "year(s).")
        return False


file = open(filename + ".csv", "r")

vaccine_name=[]

vaccine_dose=[]

vaccine_date=[]

for line in file.readlines():
    field = line.split(",")
    vaccine_name.append(field[0])
    vaccine_dose.append(field[1])
    vaccine_date.append(field[2])


#Flu - 1 dose anually (COMPLETE)
    
position_flu=[]
index = -1
for item in vaccine_name:
    index +=1
    #print(item,index)
    if "flu" in item:
        position_flu.append(index)

max_flu = max(position_flu)

most_recent_flu_date = vaccine_date[max_flu]
#print(most_recent_flu_date)

flu_date_fields = most_recent_flu_date.split("/")

#print(flu_date_fields)

new_int_list_flu =[]

for num in flu_date_fields:
    num = int(num)
    new_int_list_flu.append(num)

#print(new_int_list_flu)

flu_year = new_int_list_flu[2]
flu_month = new_int_list_flu[0]
flu_day = new_int_list_flu[1]


flu_date = date(flu_year, flu_month, flu_day)
#print(flu_date)

if age(filename)>=19:
    if "Influenza" not in vaccine_name: #we should go off the vax name used in the headers 
        print("get flu vaccine.")
    elif numOfDays(flu_date, today)>=365:
        print("get flu vaccine.")
    else:
        print("up to date on flu vax.")
